#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/' do
  filter :erb
  layout 'homepage'
end


compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    case item[:extension]
        when 'html'
            # Lay the content out into this template
            layout 'default'
            # Run the laid out content through erb to run embedded function calls etc
            filter :erb
            #Convert resource links to use relative paths
            #filter :relativize_paths,:type => :html
        when 'css'
            filter :relativize_paths,:type => :css
        when 'js'
            filter :relativize_paths,:type => :css
    end
  end
end

route '/tutorial/' do
  # Write item with identifier /foo/ to /foo/index.html
  item.identifier + 'index.html'
end

route '/tutorial/*' do
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    case item[:extension]
        when nil
            item.identifier.chop
        when 'html'
            item.identifier + 'index.html'
        else
            item.identifier.chop + '.' + item[:extension]
    end
  end
end

layout '*', :erb
